From cf11616a6750cc84a57cb7fb14cb3bf95964584f Mon Sep 17 00:00:00 2001
From: "Barlow, Terry" <Terry.Barlow@us.fujitsu.com>
Date: Wed, 6 Feb 2019 15:30:05 -0600
Subject: [PATCH] 4.1-support-ps_shutdown
  NOTE: Mod by peter.bugni@fujitsu.com, Jan 2020:
    rmv accton_t600_cpld.cc patch
    mod fsl_soc.c reset type translation
    mod fss2_reset.c to add power off

---
 arch/powerpc/sysdev/Makefile     |  2 +-
 arch/powerpc/sysdev/fsl_soc.c    | 56 +++++++++++++--------------
 arch/powerpc/sysdev/fss2_reset.c | 84 ++++++++++++++++++++++++++++++++++++++++
 3 files changed
 create mode 100644 arch/powerpc/sysdev/fss2_reset.c

diff --git a/arch/powerpc/sysdev/Makefile b/arch/powerpc/sysdev/Makefile
index 2e384f5..cf11ba4 100644
--- a/arch/powerpc/sysdev/Makefile
+++ b/arch/powerpc/sysdev/Makefile
@@ -17,7 +17,7 @@ obj-$(CONFIG_PPC_DCR_NATIVE)	+= dcr-low.o
 obj-$(CONFIG_PPC_PMI)		+= pmi.o
 obj-$(CONFIG_U3_DART)		+= dart_iommu.o
 obj-$(CONFIG_MMIO_NVRAM)	+= mmio_nvram.o
-obj-$(CONFIG_FSL_SOC)		+= fsl_soc.o fsl_mpic_err.o
+obj-$(CONFIG_FSL_SOC)		+= fss2_reset.o fsl_soc.o fsl_mpic_err.o
 obj-$(CONFIG_FSL_PCI)		+= fsl_pci.o $(fsl-msi-obj-y)
 obj-$(CONFIG_FSL_PMC)		+= fsl_pmc.o
 obj-$(CONFIG_FSL_CORENET_RCPM)	+= fsl_rcpm.o
diff --git a/arch/powerpc/sysdev/fsl_soc.c b/arch/powerpc/sysdev/fsl_soc.c
index 9e9a02b..797786b 100644
--- a/arch/powerpc/sysdev/fsl_soc.c
+++ b/arch/powerpc/sysdev/fsl_soc.c
@@ -179,41 +179,41 @@ EXPORT_SYMBOL(get_baudrate);
 #endif /* CONFIG_CPM2 */
 
 #if defined(CONFIG_FSL_SOC_BOOKE) || defined(CONFIG_PPC_86xx)
-static __be32 __iomem *rstcr;
 
-static int __init setup_rstcr(void)
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/syscalls.h>
+#include <linux/fcntl.h>
+#include <asm/uaccess.h>
+#include <asm-generic/ioctl.h>
+#include <linux/hdreg.h>
+#include <uapi/asm/ioctl.h>
+#include <linux/ioctl.h>
+#include <linux/ata.h>
+
+/*!
+** @brief Invoked at startup. Will allocate and map registers used during reset.
+**        linux reset     -> FNC Warm reset
+**        linux halt      -> FNC Power off
+**        linux power off -> FNC Hard Reset
+*/
+extern void fss2_reset_warm(char *cmd);
+extern void fss2_reset_power_off(void);
+extern void fss2_reset_hard(void);
+
+static int __init setup_finity_reset(void)
 {
-	struct device_node *np;
-
-	for_each_node_by_name(np, "global-utilities") {
-		if ((of_get_property(np, "fsl,has-rstcr", NULL))) {
-			rstcr = of_iomap(np, 0) + 0xb0;
-			if (!rstcr)
-				printk (KERN_ERR "Error: reset control "
-						"register not mapped!\n");
-			break;
-		}
-	}
-
-	if (!rstcr && ppc_md.restart == fsl_rstcr_restart)
-		printk(KERN_ERR "No RSTCR register, warm reboot won't work\n");
-
-	of_node_put(np);
+    ppc_md.restart    = fss2_reset_warm;         // Warm (reboot) (default)
+    pm_power_off      = fss2_reset_hard;         // Hard reset
+    ppc_md.halt       = fss2_reset_power_off;    // Power off
 
 	return 0;
 }
 
-arch_initcall(setup_rstcr);
-
-void fsl_rstcr_restart(char *cmd)
-{
-	local_irq_disable();
-	if (rstcr)
-		/* set reset control register */
-		out_be32(rstcr, 0x2);	/* HRESET_REQ */
+arch_initcall(setup_finity_reset);
 
-	while (1) ;
-}
+void fsl_rstcr_restart(char *cmd) {}
 #endif
 
 struct platform_diu_data_ops diu_ops;
diff --git a/arch/powerpc/sysdev/fss2_reset.c b/arch/powerpc/sysdev/fss2_reset.c
new file mode 100644
index 0000000..6208da6
--- /dev/null
+++ b/arch/powerpc/sysdev/fss2_reset.c
@@ -0,0 +1,87 @@
+/*
+ * FSS2 Linux reset patch stub. Vendor responsibility
+ *
+ * 
+ *
+ * 2018 (c) Fujitsu Network communications
+ * 
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#include <linux/stddef.h>
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/errno.h>
+#include <linux/major.h>
+#include <linux/delay.h>
+#include <linux/irq.h>
+#include <linux/export.h>
+#include <linux/device.h>
+#include <linux/platform_device.h>
+#include <linux/of.h>
+#include <linux/of_platform.h>
+#include <linux/phy.h>
+#include <linux/phy_fixed.h>
+#include <linux/spi/spi.h>
+#include <linux/fsl_devices.h>
+#include <linux/fs_enet_pd.h>
+#include <linux/fs_uart_pd.h>
+
+#include <linux/atomic.h>
+#include <asm/io.h>
+#include <asm/irq.h>
+#include <asm/time.h>
+#include <asm/prom.h>
+#include <asm/machdep.h>
+#include <sysdev/fsl_soc.h>
+#include <mm/mmu_decl.h>
+#include <asm/cpm2.h>
+#include <asm/fsl_hcalls.h>	/* For the Freescale hypervisor */
+
+#define WARM_RESTART           2
+#define COLD_RESTART           1
+#define POWER_OFF              0
+
+extern int t600_reset(int reset_type);
+
+/* FSS2 Reset Warm function stub */
+//static u32 fss2_reset_warm = -1;
+
+void fss2_reset_warm(char *cmd)
+{
+	int status;
+	status = t600_reset(WARM_RESTART);
+	return ;
+}
+
+EXPORT_SYMBOL(fss2_reset_warm);
+
+
+/* FSS2 Reset hard function stub */
+//static u32 fss2_reset_hard = -1;
+
+void fss2_reset_hard(void)
+{
+	int status;
+	status = t600_reset(COLD_RESTART);
+	return ;
+}
+
+EXPORT_SYMBOL(fss2_reset_hard);
+
+
+/* FSS2 Reset power_off function stub */
+//static u32 fss2_reset_power_off = -1;
+
+void fss2_reset_power_off(void)
+{
+    int status;
+    status = t600_reset(POWER_OFF);
+    return ;
+}
+
+EXPORT_SYMBOL(fss2_reset_power_off);
-- 
1.8.3.1

