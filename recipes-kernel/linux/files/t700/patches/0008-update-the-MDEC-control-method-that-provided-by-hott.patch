From 0afb5a17c3324782298929121de8ac130ca5dc78 Mon Sep 17 00:00:00 2001
From: aken_liu <aken_liu@accton.com.tw>
Date: Mon, 6 Aug 2018 11:02:34 +0800
Subject: [PATCH 3/3] update the MDEC control method that provided by hotta-san

---
 drivers/misc/accton_t600_fj_mdec.c | 31 +++++++++++++++++--------------
 1 file changed, 17 insertions(+), 14 deletions(-)

diff --git a/drivers/misc/accton_t600_fj_mdec.c b/drivers/misc/accton_t600_fj_mdec.c
index 35f5415..e877567 100644
--- a/drivers/misc/accton_t600_fj_mdec.c
+++ b/drivers/misc/accton_t600_fj_mdec.c
@@ -114,6 +114,7 @@ enum fpga_register_map
     // MDIO Error
     BMD_AC_BUS_TAERR    = 0x00700120,
     // MDEC HW Pin
+    HW_VCC              = 0x00000228,
     HW_ModSelL          = 0x00A00024,
     HW_LPMODE           = 0x00A00020,
     HW_RESETL           = 0x00A00008,
@@ -624,9 +625,6 @@ static void write_port_eeprom_one_byte(struct fpga_device* fpga_dev, u8 port, u8
     u32 set_add, set_dt, status;
     int i;
 
-    // Set ModSelL. Address is 0x00An0024. Port1:n=0x0~Port12:n=0xB
-    t600_fj_mdec_write32(0x1, fpga_dev->hw_addr + HW_ModSelL + (port << 16));
-
     for(i = 0; i < I2C_CHK_BUS_BUSY_RETRY_COUNT ; i++)
     {
         status = t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_BUSY + (port << 16)); //0x00An0130, n means port
@@ -671,10 +669,6 @@ static void write_port_eeprom_one_byte(struct fpga_device* fpga_dev, u8 port, u8
             printk(KERN_DEBUG "[DEBUG] check - I2C_IRQ_ERR_HL status is err, retry count =%d\r\n", i+1);
         }
     }
-
-    // Clear ModSelL. Address 0x00An0024. Port1:n=0x0~Port12:n=0xB
-    udelay(500); /* Fixme! We don't know how long should we delay */
-    t600_fj_mdec_write32(0x0, fpga_dev->hw_addr + HW_ModSelL + (port << 16));
 }
 
 static void read_port_eeprom_data(struct fpga_device* fpga_dev, u8 port, u8 *buffer)
@@ -697,9 +691,6 @@ static u8 read_port_eeprom_one_byte(struct fpga_device* fpga_dev, u8 port, u8 po
     u8 value;
     int i, j;
 
-    // Set ModSelL. Address is 0x00An0024. Port1:n=0x0~Port12:n=0xB
-    t600_fj_mdec_write32(0x1, fpga_dev->hw_addr + HW_ModSelL + (port << 16));
-
     for(i = 0; i < I2C_CHK_BUS_BUSY_RETRY_COUNT ; i++)
     {
         status = t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_BUSY + (port << 16)); //0x00An0130, n means port
@@ -743,8 +734,6 @@ static u8 read_port_eeprom_one_byte(struct fpga_device* fpga_dev, u8 port, u8 po
     
     value = (u8)t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_READ_DT + (port << 16)); //0x00An0144, n means port
 
-    // Clear ModSelL. Address 0x00An0024. Port1:n=0x0~Port12:n=0xB
-    t600_fj_mdec_write32(0x0, fpga_dev->hw_addr + HW_ModSelL + (port << 16));
     return value;   
 }
 
@@ -864,7 +853,7 @@ static int accton_fpga_probe(struct pci_dev* pdev, const struct pci_device_id* d
     struct fpga_device* fpga_dev;
     int pci_dev_busy = 0;
     int rc =  - EBUSY;
-
+    int i;
 
     dev_info(&pdev->dev, "%s v%s\n", DRIVER_DESCRIPTION_NAME, DRIVER_VERSION);
 
@@ -908,7 +897,21 @@ static int accton_fpga_probe(struct pci_dev* pdev, const struct pci_device_id* d
         goto err_out_free;
     }
 
-    /* Register sysfs hooks. */
+    /* T600 QSFP I2c access does not conflict. Set ModSelL. Always set ModSelL to 1.
+        Address is 0x00An0024. Port1:n=0x0~Port12:n=0xB */
+    for(i = 0; i < 12 ; i++)
+    {
+        t600_fj_mdec_write32(0x1, fpga_dev->hw_addr + HW_ModSelL + (i << 16));
+    }
+
+    /* Power on all port.
+       0: Power OFF(default)
+       1: Power ON
+       [0]: Port1 ~ [5]: Port6
+       [8]: Port7 ~ [13]: Port12
+    */
+    t600_fj_mdec_write32(0x00001F3F, fpga_dev->hw_addr + HW_VCC);
+
     rc = sysfs_create_group(&pdev->dev.kobj, &sysfs_group);
     if(rc)
     {
-- 
1.9.1

