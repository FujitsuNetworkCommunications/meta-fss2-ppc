From fd995535938a2e2be6d50b1598ac4f6e3244d1af Mon Sep 17 00:00:00 2001
From: aken_liu <aken_liu@accton.com.tw>
Date: Mon, 6 Aug 2018 10:21:06 +0800
Subject: [PATCH 1/3] fix the cold reset function with the new SYSTEM CPLD

---
 drivers/hwmon/accton_t600_cpld.c | 30 ++++++++++++++++++++++--------
 1 file changed, 22 insertions(+), 8 deletions(-)

diff --git a/drivers/hwmon/accton_t600_cpld.c b/drivers/hwmon/accton_t600_cpld.c
index 68b3e58..51044c9 100644
--- a/drivers/hwmon/accton_t600_cpld.c
+++ b/drivers/hwmon/accton_t600_cpld.c
@@ -46,6 +46,7 @@
 #define BOARD_PG_REG                0x18
 #define PIU_MGMT_PG_REG             0x21
 #define SYSTEM_RESET_REG            0x22
+#define RESET_CONTROL_REG           0x26
 #define PIU_THERMAL_CONTROL_REG     0x19
 
 struct t600_cpld_data {
@@ -294,19 +295,32 @@ static ssize_t reset(struct device *dev, struct device_attribute *da,
         return status;
     }
         
-    if (reset < 1 || reset > 2) {  /* reset 1: cold reset, 2: warm reset */
+    if (reset < 1 || reset > 2) {  /* reset 1: hard reset, 2: warm reset */
         return -EINVAL;
     }
 
     mutex_lock(&data->update_lock);
-    status = t600_cpld_read(client, SYSTEM_RESET_REG);
-    if (unlikely(status < 0)) {
-        goto exit;
+    if (reset == 1) {
+        /* RESET_ALL when SW hard reset */
+        status = t600_cpld_read(client, SYSTEM_RESET_REG);
+        if (unlikely(status < 0)) {
+            goto exit;
+        }
+
+        regval = status | (0x1 << 0);
+        status = t600_cpld_write(client, RESET_CONTROL_REG, regval);
     }
-   
-    regval = status | reset;
+		else {
+        /* WARM_BOOT when SW warm reset */
+        status = t600_cpld_read(client, SYSTEM_RESET_REG);
+        if (unlikely(status < 0)) {
+            goto exit;
+        }
+
+        regval = status | (0x1 << 1);
+        status = t600_cpld_write(client, SYSTEM_RESET_REG, regval);
+		}
 
-    status = t600_cpld_write(client, SYSTEM_RESET_REG, regval);
     if (unlikely(status < 0)) {
         goto exit;
     }
@@ -331,7 +345,7 @@ static ssize_t show_bootstatus(struct device *dev, struct device_attribute *da,
         goto exit;
     }
     mutex_unlock(&data->update_lock);
-    return sprintf(buf, "%d\n", (status & 0x03));  /* BIT_1 WARM BOOT=2, BIT_0 COLD BOOT=1 */
+    return sprintf(buf, "%d\n", ((status & 0x02)? 2:1));  /* BIT_1 WARM BOOT=2, BIT_0 COLD BOOT=1 */
 exit:
     mutex_unlock(&data->update_lock);
     return status;  
-- 
1.9.1

