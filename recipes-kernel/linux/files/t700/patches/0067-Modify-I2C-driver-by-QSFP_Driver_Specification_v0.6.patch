From 98bfec587aaccdd7f6daace8b8cfbffb00c0ce6e Mon Sep 17 00:00:00 2001
From: roy_chuang <roy_chuang@edge.core.com>
Date: Thu, 4 Jun 2020 17:54:51 +0800
Subject: [PATCH] Modify I2C driver by "QSFP_Driver_Specification_v0.6".

---
 drivers/misc/accton_t600_fj_mdec.c | 32 ++++++++++++++++++++++----------
 1 file changed, 22 insertions(+), 10 deletions(-)

diff --git a/drivers/misc/accton_t600_fj_mdec.c b/drivers/misc/accton_t600_fj_mdec.c
index df93a3c..397848c 100755
--- a/drivers/misc/accton_t600_fj_mdec.c
+++ b/drivers/misc/accton_t600_fj_mdec.c
@@ -63,6 +63,7 @@
 #define MDIO_READ_CMD2                                          0x0005  // 0101
 #define MDIO_BUS_CHK_OK                                         0x0000  // TBD
 #define MDIO_STATUS_BUSY                                        0x0001  // TBD
+#define I2C_NO_ERROR                                            0x0

 // MDEC
 #define MDEC_WRITE_MODE                                         (0x0001)
@@ -74,7 +75,7 @@
 #define I2C_WRITE_MODE                                          (0x01)
 #define I2C_READ_MODE                                           (0x00)
 #define I2C_CHK_BUS_BUSY_RETRY_COUNT                            200
-#define I2C_READ_STATUS_RETRY_COUNT                             3
+#define I2C_READ_STATUS_RETRY_COUNT                             20
 #define I2C_ACC_CMD_WRITE                                       0x00000002
 #define I2C_ACC_CMD_READ                                        0x00000001

@@ -136,6 +137,7 @@ enum fpga_register_map
     I2C_ACC_CMD         = 0x00A00134,
     I2C_BUSY            = 0x00A00130,
     I2C_IRQ_ERR_HL      = 0x00A00120,
+    I2C_CONFLICT_ERR    = 0x00A001E0,
     // CDEC
     TRUE_PWR_EN         = 0x00A00200,
     TRUE_PWR_CTL        = 0x00A00204,
@@ -1011,7 +1013,7 @@ static ssize_t read_port_eeprom(struct device* dev, struct device_attribute* att
 /* refer to sheet "QSFP28_Driver" of "03_05_QSFP28_Driver_Specification_v0.4.xlsx" */
 static s32 write_port_eeprom_one_byte(struct fpga_device* fpga_dev, u8 port, u8 pos, u8 value)
 {
-    u32 set_add, set_dt, status;
+    u32 set_add, set_dt, status, err_irq, err_conflict;
     int i;
     struct device *dev = fpga_dev->fpga_adap[port].parent;

@@ -1043,19 +1045,23 @@ static s32 write_port_eeprom_one_byte(struct fpga_device* fpga_dev, u8 port, u8
         t600_fj_mdec_write32(set_dt, fpga_dev->hw_addr + I2C_WRITE_DT + (port << 16)); //
         // Write Trigger
         t600_fj_mdec_write32(I2C_ACC_CMD_WRITE, fpga_dev->hw_addr + I2C_ACC_CMD + (port << 16)); //0x00An0134, n means port
-        status = t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_IRQ_ERR_HL + (port << 12));
-        if(status == 0)
+        err_irq = t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_IRQ_ERR_HL + (port << 16));
+        err_conflict = t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_CONFLICT_ERR + (port << 16));
+        if((err_irq == I2C_NO_ERROR) && (err_conflict == I2C_NO_ERROR))
         {
             // NO Error
             break;  
         }

-        dev_dbg(dev, "I2C_IRQ_ERR_HL is err, retry count =%d\n", i+1);
+        usleep_range(5000, 10000);
+        dev_dbg(dev, "I2C_IRQ_ERR_HL:0x%x, I2C_CONFLICT_ERR:0x%x, retry:%d port:%d\n",
+            err_irq, err_conflict, i+1, port);
     }

     if(i == I2C_READ_STATUS_RETRY_COUNT)
     {
-        dev_err(dev, "check - I2C_IRQ_ERR_HL status is err, retry 3 timeout\n");
+        dev_err(dev, "I2C_IRQ_ERR_HL:0x%x, I2C_CONFLICT_ERR:0x%x, retry:%d port:%d\n",
+            err_irq, err_conflict, i, port);
         return -ECOMM;
     }

@@ -1078,7 +1084,7 @@ static void read_port_eeprom_data(struct fpga_device* fpga_dev, u8 port, u8 *buf

 static s32 read_port_eeprom_one_byte(struct fpga_device* fpga_dev, u8 port, u8 pos)
 {
-    u32 set_add, status;
+    u32 set_add, status, err_irq, err_conflict;
     u8 value;
     int i, j;
     struct device *dev = fpga_dev->fpga_adap[port].parent;
@@ -1125,15 +1131,21 @@ static s32 read_port_eeprom_one_byte(struct fpga_device* fpga_dev, u8 port, u8 p
             return -EBUSY;
         }

-        status = t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_IRQ_ERR_HL + (port << 16)); //0x00An0120, n means port
-        if(status == 0)
+        err_irq = t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_IRQ_ERR_HL + (port << 16)); //0x00An0120, n means port
+        err_conflict = t600_fj_mdec_read32(fpga_dev->hw_addr + I2C_IRQ_ERR_HL + (port << 16)); //0x00An0120, n means port
+        if((err_irq == I2C_NO_ERROR) && (err_conflict == I2C_NO_ERROR))
         {
             break;  
         }
+
+        usleep_range(5000, 10000);
+        dev_dbg(dev, "I2C_IRQ_ERR_HL:0x%x, I2C_CONFLICT_ERR:0x%x, retry:%d port:%d\n",
+            err_irq, err_conflict, i+1, port);
     }

     if(I2C_READ_STATUS_RETRY_COUNT == i){
-        dev_err(dev, "check - I2C_IRQ_ERR_HL status is err, retry 3 timeout\n");
+        dev_err(dev, "I2C_IRQ_ERR_HL:0x%x, I2C_CONFLICT_ERR:0x%x, retry:%d port:%d\n",
+            err_irq, err_conflict, i, port);
         return -ECOMM;
     }

-- 
1.9.1

                      
