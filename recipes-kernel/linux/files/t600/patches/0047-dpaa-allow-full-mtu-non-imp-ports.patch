--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.h
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth.h
@@ -48,7 +48,7 @@
 #define BCM_TAG_LEN 10
 
 #define dpa_get_max_mtu()	\
-	(dpa_get_max_frm() - (VLAN_ETH_HLEN + ETH_FCS_LEN)-BCM_TAG_LEN)
+	(dpa_get_max_frm() - (VLAN_ETH_HLEN + ETH_FCS_LEN))
 
 #define __hot
 
--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_sg.c
@@ -1000,6 +1000,7 @@
 	dma_addr_t addr = qm_fd_addr(fd);
 	u32 fd_status = fd->status;
 	unsigned int skb_len;
+	unsigned int mtu_extension = 0;
 	struct rtnl_link_stats64 *percpu_stats = &percpu_priv->stats;
 	int use_gro = net_dev->features & NETIF_F_GRO;
 
@@ -1050,6 +1051,7 @@
 	{
 		/*dump_packet(skb->data,skb->len+16);*/
 		dpa_remove_bcm_tag(skb,net_dev);
+	   mtu_extension = BCM_TAG_LEN;
 		/*dump_packet(skb->data,skb->len+16);*/
 	}
 
@@ -1060,7 +1062,7 @@
 	skb->protocol = eth_type_trans(skb, net_dev);
 
 	/* IP Reassembled frames are allowed to be larger than MTU */
-	if (unlikely(dpa_check_rx_mtu(skb, net_dev->mtu+BCM_TAG_LEN) &&
+	if (unlikely(dpa_check_rx_mtu(skb, net_dev->mtu+mtu_extension) &&
 		!(fd_status & FM_FD_IPR))) {
 		percpu_stats->rx_dropped++;
 		goto drop_bad_frame;

